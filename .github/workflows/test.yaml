name: Testing with Pytest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.10.9 ]
        database-name:
          - yoona
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432
        redis-host:
          - 127.0.0.1
        redis-port:
          - 6379
        redis-password:
          - redis
        redis-db:
          - 0
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: bitnami/redis:latest
        ports:
          - 6379:6379
        env:
          REDIS_PASSWORD: ${{ matrix.redis-password }}
          REDIS_HOST: ${{ matrix.redis-host }}
          REDIS_PORT: ${{ matrix.redis-port }}
          REDIS_DB: ${{ matrix.redis-db }}

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make install
      - name: Format with black
        run: |
          make black
      - name: Setup test database
        env:
          POSTGRES_DATABASE: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
          POSTGRES_HOST: ${{ matrix.database-host }}
          POSTGRES_PORT: ${{ matrix.database-port }}
        run: |
          export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
          export SECRET_KEY=some_secret_key
          export DEBUG=1
      - name: Run migrations
        run: |
          cd src
          export DATABASE_URL=postgres://${{ matrix.database-user }}:${{ matrix.database-password }}@${{ matrix.database-host }}:${{ matrix.database-port }}/${{ matrix.database-name }}
          export SECRET_KEY=some_secret_key
          export DEBUG=1
          python manage.py makemigrations
          python manage.py migrate
          python manage.py migrate --run-syncdb
          python manage.py check
      - name: Run tests
        run: |
          make test
        env:
          POSTGRES_DATABASE: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
          POSTGRES_HOST: ${{ matrix.database-host }}
          POSTGRES_PORT: ${{ matrix.database-port }}
          REDIS_PASSWORD: ${{ matrix.redis-password }}
          REDIS_HOST: ${{ matrix.redis-host }}
          REDIS_PORT: ${{ matrix.redis-port }}
          REDIS_DB: ${{ matrix.redis-db }}
          SECRET_KEY: some_secret_key
          DEBUG: 1
      - uses: actions/checkout@v2.4.0
